const token = document.getElementById('token');
const msg   = document.getElementById('msg');
const tbl   = document.querySelector('#tbl tbody');
const upForm= document.getElementById('upForm');

function setMsg(text, type = 'success') {
  msg.textContent = text;
  msg.className = `status-msg status-${type}`;
  msg.style.display = 'block';
  
  // Auto hide after 5 seconds
  setTimeout(() => {
    msg.style.display = 'none';
  }, 5000);
}

async function call(path, method='GET', body){
  const r = await fetch(path, {
    method,
    headers: {'Content-Type':'application/json','X-API-KEY': token.value||''},
    body: body? JSON.stringify(body) : undefined
  });
  if(!r.ok) throw new Error((await r.text()) || r.statusText);
  return await r.json().catch(()=> ({}));
}

async function load(){
  try {
    // ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å + ‡∏£‡∏π‡∏õ
    const rows = await call('/admin/options','GET');
    const photos = await fetch('/photos').then(r=>r.json()).catch(()=> ({}));
    tbl.innerHTML = '';
    
    for(const it of rows.options){
      const tr = document.createElement('tr');
      const img = photos[it.option] ? 
        `<img src="${photos[it.option]}" style="height:50px;border-radius:6px;object-fit:cover;border:2px solid var(--border)">` : 
        '<span style="color:var(--text-muted); font-style:italic;">‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏π‡∏õ</span>';
      
      const status = it.count > 0 ? 
        `<span style="color:var(--success); font-weight:600;">‡∏°‡∏µ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô</span>` : 
        `<span style="color:var(--text-muted);">‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô</span>`;
      
      tr.innerHTML = `
        <td style="font-weight:600; color:var(--primary);">${it.option}</td>
        <td>${it.label}</td>
        <td style="font-weight:600; color:var(--primary);">${it.count.toLocaleString()}</td>
        <td>${img}</td>
        <td>${status}</td>
      `;
      tbl.appendChild(tr);
    }
    setMsg(`‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î: ${new Date().toLocaleString('th-TH')}`, 'success');
  } catch(e) {
    setMsg(`‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•: ${e.message}`, 'error');
  }
}

async function resetAll(){
  if(!confirm('‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î? ‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏î‡πâ')) {
    return;
  }
  try{ 
    await call('/admin/reset','POST'); 
    setMsg('‚úÖ ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß', 'success'); 
    load(); 
  }
  catch(e){ setMsg(`‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï: ${e.message}`, 'error'); }
}

async function renameOpt(){
  const option = document.getElementById('optKey').value.trim();
  const label  = document.getElementById('optLabel').value.trim();
  if(!/^[0-9]$/.test(option)){ 
    setMsg('‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏ú‡∏π‡πâ‡∏™‡∏°‡∏±‡∏Ñ‡∏£ 0-9', 'warning'); 
    return; 
  }
  if(!label){ 
    setMsg('‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÉ‡∏´‡∏°‡πà', 'warning'); 
    return; 
  }
  try{ 
    await call('/admin/options/rename','POST',{option,label}); 
    setMsg(`‚úÖ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç ${option} ‡πÄ‡∏õ‡πá‡∏ô "${label}" ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß`, 'success'); 
    document.getElementById('optKey').value = '';
    document.getElementById('optLabel').value = '';
    load(); 
  }
  catch(e){ setMsg(`‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠: ${e.message}`, 'error'); }
}

upForm.addEventListener('submit', async (ev)=>{
  ev.preventDefault();
  const files = document.getElementById('files').files;
  if(!files || !files.length){ 
    setMsg('‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏Å‡πà‡∏≠‡∏ô‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î', 'warning'); 
    return; 
  }
  
  const fd = new FormData();
  for(const f of files) fd.append('files', f);
  
  try{
    setMsg('üì§ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå...', 'warning');
    const r = await fetch('/admin/upload', {method:'POST', headers:{'X-API-KEY': token.value||''}, body: fd});
    if(!r.ok) throw new Error(await r.text());
    setMsg(`‚úÖ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à (${files.length} ‡πÑ‡∏ü‡∏•‡πå)`, 'success'); 
    document.getElementById('files').value = '';
    load();
  }catch(e){ 
    setMsg(`‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î: ${e.message}`, 'error'); 
  }
});

load(); setInterval(load, 2000);


